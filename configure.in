AC_INIT(README)

AC_CONFIG_HEADER(config.h)
AC_PROG_CC()
#CFLAGS=-g3
AC_PROG_INSTALL
AC_PATH_PROG(FLEX,flex)
AC_PATH_PROG(YACC,yacc)

libsave="$LIBS"

AC_ARG_WITH(moduledir,
[  --with-moduledir=dir    install module to dir],
[
if test x$withval != xyes ; then
	moduledir="$withval"
fi
]
,
moduledir="$libdir"/security
)

AC_ARG_WITH(krb5-libs,
[  --with-krb5-libs=dir    use Kerberos 5 libs in dir],
if test x$withval != xyes ; then
	krb5_libs="$withval"
fi
)

AC_ARG_WITH(krb5,
[  --with-krb5=dir         use Kerberos 5 headers and libs under dir],
if test x$withval != xyes ; then
	KRB5=$withval
	CPPFLAGS="-I$withval/include $CPPFLAGS"
	CFLAGS="-I$withval/include $CFLAGS"
	if test x$krb5_libs = x ; then
		LDFLAGS="-L$withval/lib $LDFLAGS"
	else
		LDFLAGS="-L$krb5_libs $LDFLAGS"
	fi
else
	KRBAFS=/usr
fi
)

AC_ARG_WITH(krbafs-libs,
[  --with-krbafs-libs=dir  use Kerberos 5-hacked krbafs libs in dir],
if test x$withval != xyes ; then
	krbafs_libs="$withval"
fi
)
AC_ARG_WITH(krbafs,
[  --with-krbafs=dir       use Kerberos 5-hacked krbafs package under dir],
if test x$withval != xyes ; then
	KRBAFS=$withval
	CPPFLAGS="-I$withval/include $CPPFLAGS"
	CFLAGS="-I$withval/include $CFLAGS"
	if test x$krbafs_libs = x ; then
		LDFLAGS="-L$withval/lib $LDFLAGS"
	else
		LDFLAGS="-L$krbafs_libs $LDFLAGS"
	fi
else
	KRBAFS=/usr
fi
)

OS=`uname`
SHTARGETS=pam_krb5.so
MAN5TARGETS=pam_krb5.5
MAN8TARGETS=pam_krb5.8

AC_CHECK_HEADERS(dlfcn.h com_err.h syslog.h sys/syslog.h errno.h)
AC_CHECK_HEADERS(security/pam_appl.h security/pam_modules.h)
AC_CHECK_HEADER(krb5.h,AC_DEFINE(HAVE_KRB5_H,1,[Define if you have krb5.h]),
	AC_ERROR(install Kerberos 5 or re-run configure with --with-krb5))

AC_CHECK_FUNC(snprintf)
AC_CHECK_FUNC(res_search,,AC_CHECK_LIB(resolv,res_search))
AC_CHECK_FUNC(connect,,AC_CHECK_LIB(socket,connect))
AC_CHECK_FUNC(yp_bind,,AC_CHECK_LIB(nsl,yp_bind))
AC_CHECK_FUNC(crypt,,AC_CHECK_LIB(crypt,crypt))
AC_CHECK_FUNC(dlopen,,AC_CHECK_LIB(dl,dlopen))
AC_CHECK_FUNC(error_message,,AC_CHECK_LIB(com_err,error_message))

# Stolen from openssh patch from simon@sxw.org.uk: 
# http://www.sxw.org.uk/computing/patches/
AC_MSG_CHECKING(whether we are using Heimdal)
AC_TRY_COMPILE([ #include <krb5.h> ],
        [ char *tmp = heimdal_version; ],
        [ AC_MSG_RESULT(yes)
          AC_DEFINE(HEIMDAL,1,[Define if you have Heimdal instead of MIT Kerberos.])
          LIBS="-lkrb5 -lasn1 $LIBS"
        ],
        [ AC_MSG_RESULT(no)
          LIBS="-lkrb5 -ldes425 -lk5crypto -lcom_err $LIBS"
        ]
)

AC_CHECK_HEADER(kerberosIV/krb.h,
                [have_krb_h="kerberosIV/krb.h"
                 AC_DEFINE(HAVE_KERBEROSIV_KRB_H,1,[Define if you have kerberosIV/krb.h.])],
                [AC_CHECK_HEADER(krb.h,[
                        have_krb_h="krb.h"
                        AC_DEFINE(HAVE_KRB_H,1,[Define if you have krb.h.])
                ])])

if test x$have_krb_h != x; then
	AC_CHECK_FUNC(in_tkt,,
		      AC_CHECK_LIB(krb4,in_tkt,,
				   AC_CHECK_LIB(krb,in_tkt)))
	AC_CHECK_FUNC(krb524_convert_creds_kdc,,
		      AC_CHECK_LIB(krb524,krb524_convert_creds_kdc))
        AC_MSG_CHECKING([whether we are using KTH Kerberos IV])
        AC_TRY_COMPILE([#include <$have_krb_h>],
                       [ char *tmp = krb4_version; ],
                       [ AC_MSG_RESULT(yes)
                         AC_DEFINE(KTH_KRB4,1,[Define if your Kerberos IV library is KTH Kerberos and not the MIT Kerberos IV libraries bundled with MIT Kerberos 5.])],
                       [ AC_MSG_RESULT(no) ])
fi
KRB5LIBS="$LIBS"

if test x$ac_cv_lib_krb4_in_tkt = xyes ; then
	AC_CHECK_HEADER(krbafs.h,
			[AC_DEFINE(HAVE_KRBAFS_H,1,[Define if you have krbafs.h.])
			 AC_CHECK_LIB(krbafs,krb_afslog,
				[LIBS="-lkrbafs $LIBS"
				 SHTARGETS="$SHTARGETS pam_krb5afs.so"
				 MAN5TARGETS="$MAN5TARGETS pam_krb5afs.5"
				 MAN8TARGETS="$MAN8TARGETS pam_krb5afs.8"],
				 AC_MSG_WARN(AFS token-grabbing disabled),
				$LIBS)],
			AC_MSG_WARN([AFS token-grabbing disabled])
	,,$LIBS)
fi
KRB5AFSLIBS="$LIBS"

AC_CHECK_FUNC(krb5_decode_ticket,AC_DEFINE(HAVE_VALIDATION,1,[Define if your Kerberos library provides krb5_decode_ticket().]))
AC_CHECK_FUNC(krb5_appdefault_string)
AC_CHECK_FUNC(krb5_appdefault_boolean)
AC_CHECK_FUNC(krb5_change_password,,AC_MSG_WARN([password-changing disabled]))
AC_CHECK_FUNC(initialize_krb5_error_table)
AC_CHECK_FUNC(krb5_verify_init_creds)
AC_CHECK_FUNCS(krb_mk_in_tkt)
AC_CHECK_FUNCS(krb_mk_in_tkt_preauth)

LIBS="$libsave"

AC_CHECK_FUNC(getpwnam_r)
AC_CHECK_FUNC(__posix_getpwnam_r)

AC_SUBST(KRB5)
AC_SUBST(KRBAFS)

OSTARGETS=`echo $SHTARGETS | sed "s^\.so^\.so\.$OS^g"`

AC_SUBST(OS)
AC_SUBST(SHTARGETS)
AC_SUBST(OSTARGETS)
AC_SUBST(KRB5LIBS)
AC_SUBST(KRB5AFSLIBS)
AC_SUBST(MAN5TARGETS)
AC_SUBST(MAN8TARGETS)
AC_SUBST(prefix)
AC_SUBST(exec_prefix)
AC_SUBST(moduledir)

AC_OUTPUT(Makefile)
