.TH pam_krb5afs 8 2001/08/21 "Red Hat Linux" "System Administrator's Manual"
.SH NAME
pam_krb5afs \- Kerberos 5 authentication with AFS support
.SH SYNOPSIS
.B auth required /lib/security/pam_krb5afs.so
.br
.B session optional /lib/security/pam_krb5afs.so
.SH DESCRIPTION
pam_krb5afs.so is designed to allow smooth integration of Kerberos 5 password-
checking with applications built using PAM.  It also supports session-specific
ticket files (which are neater), Kerberos IV ticket file grabbing, and AFS
token-grabbing.  Its main use is as an authentication module, but it also
supplies the same functions as a session-management module to better support
poorly-written applications, and a couple of other workarounds as well.

When a user logs in, the module's authentication function performs a simple
password check and, if possible, obtains Kerberos 5 and Kerberos IV credentials,
caching them for later use.  When the application requests initialization of
credentials (or opens a session), the usual ticket files are created and AFS
tokens are obtained.  When the application subsequently requests deletion of
credentials or closing of the session, the module destroys the tokens for the
current PAG and deletes the ticket files.

Some applications (notably, wu-ftpd, wu-imapd, and Samba) neither create
credentials nor open sessions.  For these applications, it's best to use the
\fBtokens\fR option to force token-grabbing during the password check, which is
usually the right thing to do for these server apps.

.SH ARGUMENTS
.IP debug
turns on debugging via \fBsyslog(3)\fR.  Debugging messages are logged with
priority LOG_DEBUG.
.IP addressless
tells pam_krb5afs.so to obtain credentials without address lists.  This may
be necessary if your network uses NAT, and should otherwise not be used.
.IP hosts=\fIhost\fP
tells pam_krb5afs.so to obtain credentials using the address of the given
host in addition to the addresses of interfaces on the local workstation.  For
example, if your workstation is behind a masquerading firewall, specifying the
firewall's outward-facing address here should allow Kerberos authentication to
succeed.
.IP afs_cells=\fIcell\fP
tells pam_krb5afs.so to obtain tokens for users in the given cell when they
log in.
.IP banner=\fIKerberos 5\fP
tells pam_krb5afs.so how to identify itself when users attempt to change their
passwords.
.IP ccache_dir=\fI/tmp\fP
tells pam_krb5afs.so which directory to use for storing credential caches.
.IP forwardable
tells pam_krb5afs.so that credentials it obtains should be forwardable.
.IP keytab=\fI/etc/krb5.keytab\fP
tells pam_krb5afs.so the location of a keytab to use when validating
credentials obtained from KDCs.
.IP krb4_convert
tells pam_krb5afs.so to obtain Kerberos IV credentials for users, in
addition to Kerberos 5 credentials.
.IP minimum_uid=\fI0\fP
tells pam_krb5afs.so to ignore authentication attempts by users with
UIDs below the specified number.
.IP no_user_check
tells pam_krb5afs.so to not check if a user exists on the local system, and
to create ccache files owned by the current process's UID.  This is useful
for situations where a non-privileged server process needs to use Kerberized
services on behalf of remote users who may not have local access.  Note that
such a server should have an encrypted connection with its client in order
to avoid allowing the user's password to be eavesdropped.
.IP proxiable
tells pam_krb5afs.so that credentials it obtains should be proxiable.
.IP realm=\fIrealm\fP
overrides the default realm set in \fI/etc/krb5.conf\fP, which pam_krb5afs.so
will attempt to authenticate users to.
.IP renew_lifetime=\fI36000\fP
sets the default renewable lifetime for credentials.
.IP skip_first_pass
tells pam_krb5afs.so to not bother checking a password that has been set by a
module listed earlier in the stack.  This option is included mainly for
completeness.
.IP ticket_lifetime=\fI36000\fP
sets the default lifetime for credentials.
.IP tokens
tells pam_krb5afs.so to get AFS tokens for the user immediately if the password
check succeeds.  This is necessary for some programs that never open sessions or
attempt to initialize credentials (PAM's credentials, not Kerberos's).  If you
have a server app that requires access to the user's file space, you might need
this.
.IP try_first_pass
tells pam_krb5afs.so to check the password as with \fBuse_first_pass\fR,
but to prompt the user for another one if the previously-entered one fails. This
is the default mode of operation.
.IP use_first_pass
tells pam_krb5afs.so to get the user's entered password as it was stored by
a module listed earlier in the stack, usually \fBpam_unix\fR or \fBpam_pwdb\fR,
instead of prompting the user for it.
.IP use_authtok
tells pam_krb5afs.so to never prompt for passwords when changing passwords.
This is useful if you are using pam_cracklib.so to try to enforce use of
less-easy-to-guess passwords.
.IP validate
tells pam_krb5afs.so to verify that the TGT obtained from the realm's servers
has not been spoofed.

.SH FILES
\fI/etc/krb5.conf\fP
.br
.SH "SEE ALSO"
.BR pam_krb5afs (5)
.br
.SH BUGS
Probably, but let's hope not.  If you find any, please email the author.
.SH AUTHOR
Nalin Dahyabhai <nalin@redhat.com>
